name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    name: "Test Python ${{ matrix.python-version }} ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
              ${{ runner.os }}-pip-
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Test
        run: |
          echo -e "[report]"                        > .coveragerc
          echo -e "    exclude_lines"              >> .coveragerc
          echo -e "    pragma: no cover"           >> .coveragerc
          echo -e "    def __repr__"               >> .coveragerc
          echo -e "    raise AssertionError"       >> .coveragerc
          echo -e "    raise NotImplementedError"  >> .coveragerc
          echo -e "    if __name__ == .__main__.:" >> .coveragerc
          echo -e "    @(abc\.)?abstractmethod"    >> .coveragerc
          echo -e "    def run"                    >> .coveragerc
          echo -e "    TYPE_CHECKING"              >> .coveragerc
          bash scripts/test.sh"